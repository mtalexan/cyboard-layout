#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen { zmk,matrix-transform = &imprint_function_row_full_bottom_row; };

    macros {
        mo_release_all: mo_release_all {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&macro_param_1to1 &to MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&mo 1 &mo 2 &mo 3 &mo 4 &mo 5 &mo 6 &mo 7>;

            label = "MO_RELEASE_ALL";
        };

        to_w_mod: to_w_mod {
            compatible = "zmk,behavior-macro-two-param";
            #binding-cells = <2>;
            bindings =
                <&macro_param_1to1 &to MACRO_PLACEHOLDER>,
                <&macro_press>,
                <&macro_param_2to1 &kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_2to1 &kp MACRO_PLACEHOLDER>;

            label = "TO_W_MOD";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC    &kp F1  &kp F2        &kp F3        &kp F4   &kp F5                        &kp F6         &kp F7  &kp F8    &kp F9           &kp F10   &kp F11
&kp GRAVE  &kp N1  &kp N2        &kp N3        &kp N4   &kp N5                        &kp N6         &kp N7  &kp N8    &kp N9           &kp N0    &kp MINUS
&kp TAB    &kp Q   &kp W         &kp E         &kp R    &kp T                         &kp Y          &kp U   &kp I     &kp O            &kp P     &kp BSLH
&kp TAB    &kp A   &kp S         &kp D         &kp F    &kp G                         &kp H          &kp J   &kp K     &kp L            &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X         &kp C         &kp V    &kp B                         &kp N          &kp M   &kp COMMA &kp DOT          &kp FSLH  &kp RSHFT
&kp LCTRL  &trans  &mo 2         &kp LEFT_GUI  &trans                                                &trans  &trans    &kp PRINTSCREEN  &trans    &kp RIGHT_CONTROL
                   &mo 5         &mo 1         &mo 3            &mkp LCLK  &kp ENTER  &kp SPACE
                   &kp LEFT_ALT  &kp ESCAPE    &kp TAB          &mkp RCLK  &mkp MCLK  &kp BACKSPACE
            >;
        };

        Nav_Layer {
            bindings = <
&trans  &trans                &trans                  &trans             &trans                &trans                  &trans         &trans                 &trans             &trans                   &trans                 &trans
&trans  &trans                &trans                  &trans             &trans                &trans                  &trans         &trans                 &trans             &trans                   &trans                 &trans
&trans  &trans                &trans                  &trans             &trans                &trans                  &kp PAGE_UP    &kp HOME               &kp UP             &kp END                  &trans                 &trans
&trans  &kp LEFT_GUI          &kp LEFT_SHIFT          &kp LCTRL          &kp LEFT_ALT          &trans                  &kp PAGE_DOWN  &kp LEFT               &kp DOWN           &kp RIGHT                &trans                 &trans
&trans  &to_w_mod 7 LEFT_GUI  &to_w_mod 7 LEFT_SHIFT  &to_w_mod 7 LCTRL  &to_w_mod 7 LEFT_ALT  &trans                  &trans         &to_w_mod 6 RIGHT_ALT  &to_w_mod 6 RCTRL  &to_w_mod 6 RIGHT_SHIFT  &to_w_mod 6 RIGHT_GUI  &trans
&trans  &trans                &trans                  &trans             &trans                                                       &trans                 &trans             &trans                   &trans                 &trans
                              &trans                  &trans             &trans                        &trans  &trans  &trans
                              &trans                  &trans             &trans                        &trans  &trans  &trans
            >;
        };

        Keyboard_Control_Layer {
            bindings = <
&trans       &trans        &trans        &trans        &trans        &trans                        &trans  &trans           &trans           &trans           &trans           &trans
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                  &trans  &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &trans           &trans           &trans
&sys_reset   &trans        &trans        &trans        &trans        &trans                        &trans  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &sys_reset
&bootloader  &trans        &trans        &trans        &trans        &trans                        &trans  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &bootloader
&to 4        &trans        &trans        &trans        &out OUT_USB  &out OUT_BLE                  &trans  &trans           &trans           &trans           &trans           &to 4
&to 4        &trans        &trans        &trans        &trans                                              &trans           &trans           &trans           &trans           &to 4
                           &trans        &trans        &trans                      &trans  &trans  &trans
                           &trans        &trans        &trans                      &trans  &trans  &trans
            >;
        };

        Auto_Mouse_Layer {
            bindings = <
&trans  &trans  &trans     &trans     &trans     &trans                  &trans  &trans          &trans          &trans           &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans                  &trans  &trans          &trans          &trans           &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans                  &trans  &trans          &msc MOVE_UP    &trans           &trans  &trans
&trans  &trans  &mkp RCLK  &mkp MCLK  &mkp LCLK  &trans                  &trans  &msc MOVE_LEFT  &msc MOVE_DOWN  &msc MOVE_RIGHT  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans                  &trans  &trans          &trans          &trans           &trans  &trans
&trans  &trans  &trans     &trans     &trans                                     &trans          &trans          &trans           &trans  &trans
                &trans     &trans     &trans             &trans  &trans  &trans
                &trans     &trans     &trans             &trans  &trans  &trans
            >;
        };

        factory_test {
            bindings = <
&kp N0  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5                  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp N1
&kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7                  &kp N8  &kp N9  &kp N0  &kp N1  &kp N2  &kp N3
&kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9                  &kp N0  &kp N1  &kp N2  &kp N3  &kp N4  &kp N5
&kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &kp N1                  &kp N2  &kp N3  &kp N4  &kp N5  &kp N6  &kp N7
&kp N8  &kp N9  &kp N0  &kp N1  &kp N2  &kp N3                  &kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9
&kp N0  &kp N1  &kp N2  &kp N3  &trans                                  &trans  &kp N7  &kp N8  &kp N9  &kp N0
                &kp N1  &kp N2  &kp N3          &kp N4  &kp N5  &kp N6
                &kp N7  &kp N8  &kp N9          &kp N0  &kp N1  &kp N2
            >;
        };

        Number_Layer {
            bindings = <
&trans  &trans           &trans       &trans     &trans      &trans                       &trans      &trans         &trans        &trans                &trans                 &trans
&trans  &kp F1           &kp F2       &kp F3     &kp F4      &kp F5                       &kp F6      &kp F7         &kp F8        &kp F9                &kp F10                &trans
&trans  &kp EXCLAMATION  &kp AT_SIGN  &kp POUND  &kp DOLLAR  &kp PERCENT                  &kp CARET   &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans
&trans  &kp N1           &kp N2       &kp N3     &kp N4      &kp N5                       &kp N6      &kp N7         &kp N8        &kp N9                &kp N0                 &trans
&trans  &trans           &trans       &kp GRAVE  &kp MINUS   &trans                       &trans      &kp EQUAL      &kp LBKT      &kp RBKT              &trans                 &trans
&trans  &trans           &trans       &trans     &trans                                               &trans         &trans        &trans                &trans                 &trans
                         &trans       &trans     &trans                   &trans  &trans  &trans
                         &trans       &trans     &trans                   &trans  &trans  &kp DELETE
            >;
        };

        Right_Mod_Layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans         &trans     &trans           &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans         &trans     &trans           &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans         &trans     &trans           &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans         &trans     &trans           &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &kp RIGHT_ALT  &kp RCTRL  &kp RIGHT_SHIFT  &kp RIGHT_GUI  &trans
&trans  &trans  &trans  &trans  &trans                                  &trans         &trans     &trans           &trans         &trans
                &trans  &trans  &trans          &trans  &trans  &trans
                &trans  &trans  &trans          &trans  &trans  &trans
            >;
        };

        Left_Mod_Layer {
            bindings = <
&trans  &trans        &trans          &trans     &trans        &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans          &trans     &trans        &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans          &trans     &trans        &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans          &trans     &trans        &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT_GUI  &kp LEFT_SHIFT  &kp LCTRL  &kp LEFT_ALT  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans        &trans          &trans     &trans                                        &trans  &trans  &trans  &trans  &trans
                      &trans          &trans     &trans                &trans  &trans  &trans
                      &trans          &trans     &trans                &trans  &trans  &trans
            >;
        };
    };
};

//right hand trackball configuration
&trackball_peripheral_listener {
    input-processors =
        // Reduce sensitiviy: multiply by 1, divide by 3 (make it slower).
        // OS usually only has a single setting for all mice/trackballs, so try to match
        // the input sensitivity to a normal mouse's.
        <&zip_xy_scaler 1 3>;
        
        //// this gets it to the default installation orientation.
        //<&zip_xy_transform INPUT_TRANSFORM_XY_SWAP>,

        // activate layer 3 within 500ms of the trackball moving.
        // <&zip_temp_layer 3 500>;
};

//left hand trackball configuration
&trackball_central_listener {
    input-processors =
        //// this gets it to the default installation orientation.
        //<&zip_xy_transform INPUT_TRANSFORM_XY_SWAP>,
        
        // multiply sensitivity by 1, divide by 3 (make it slower for scrolling).
        //<&zip_xy_scaler 1 3>,,
        // WARNING: if this ratio gets too high, the trackball might feel like it has a deadzone to start scrolling.
        <&zip_xy_scaler 1 15>,

        // Make the top of the trackball correspond to the object within the view. 
        // Y already acts this way by default, top of the trackball going up moves the page up and the view down,
        // but X does the opposite by default.
        <&zip_scroll_transform INPUT_TRANSFORM_X_INVERT>,

        // make this trackball output scrolling events by default instead of cursor movement.
        <&zip_xy_to_scroll_mapper>;
    
        //// invert vertical scrolling so that the view moves in the same direction as the top of the trackball.
        //<&zip_scroll_transform INPUT_TRANSFORM_Y_INVERT>;
};
